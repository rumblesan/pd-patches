#N canvas 543 372 689 519 12;
#X text 27 17 Bernoulli Gate;
#X obj 47 307 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 47 336 metro 500;
#X floatatom 135 338 5 0 0 0 - - -;
#X msg 197 349 a b c d;
#X obj 47 449 print l;
#X obj 170 449 print r;
#X obj 439 374 bernoulli-gate-ui;
#A saved 0.385827;
#X obj 47 422 bernoulli-gate 0.5;
#X obj 173 392 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 11900 1;
#X text 27 63 A message sent into the left inlent will be randomly
sent out one of the bottom outlets with the chance of an outlet being
chosen specified by the chance parameter. At 0 \, every message will
come out the left outlet \, while at 1 every message will pass to the
right outlet. 0.5 gives a 50/50 chance of each. The chance parameter
can be specified as an abstraction argument \, or by sending a value
to the right inlet. The UI version works the same way \, but provides
a slider control as well as input and output indicators. It will also
save its state on patch save.;
#X obj 397 271 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 397 300 metro 500;
#X floatatom 485 302 5 0 0 0 - - -;
#X msg 547 313 a b c d;
#X obj 532 345 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 4900 1;
#X obj 375 437 print ui-l;
#X obj 486 435 print ui-r;
#X connect 1 0 2 0;
#X connect 2 0 8 0;
#X connect 3 0 8 0;
#X connect 4 0 8 0;
#X connect 7 0 16 0;
#X connect 7 1 17 0;
#X connect 8 0 5 0;
#X connect 8 1 6 0;
#X connect 9 0 8 1;
#X connect 11 0 12 0;
#X connect 12 0 7 0;
#X connect 13 0 7 0;
#X connect 14 0 7 0;
#X connect 15 0 7 1;
